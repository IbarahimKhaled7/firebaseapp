

import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';

import 'package:sdaw222/self/Cator/Scrrencator.dart';
import 'package:sdaw222/self/Cator/modelCator.dart';
import 'package:sdaw222/self/Useelement/dioShop.dart';
import 'package:sdaw222/self/endpoin/endpoint.dart';
import 'package:sdaw222/self/favortes/favortsModles.dart';
import 'package:sdaw222/self/favortes/modelsfaovraaaaaaaaaaaaaaaaaaaaa.dart';
import 'package:sdaw222/self/lgo/consting.dart';
import 'package:sdaw222/self/lgo/modellogin.dart';
import 'package:sdaw222/self/prod/Scrrenprod.dart';
import 'package:sdaw222/self/seacreh/models.dart';
import 'package:sdaw222/self/stting/Stting.dart';
import 'package:sdaw222/self/favortes/favirScren.dart';
import 'package:sdaw222/self/prod/modelspord.dart';
import 'package:sdaw222/self/shopehome/States.dart';

class cubitHomeSop extends Cubit<homeStatesSop> {
  cubitHomeSop() : super(inithomeStatesSop());

  static cubitHomeSop get(context) => BlocProvider.of(context);

  int curt = 0;

  List<Widget> ScreenHomeSop = [
    ProductsHomeSop(),
    CatorgHomeSop(),
    FavortHomeSop(),
    SttingHomeSop(),
  ];

  List<BottomNavigationBarItem>BottomHomSop = [
    BottomNavigationBarItem(
      icon: Icon(Icons.production_quantity_limits_outlined),
      label: "production",
    ),
    BottomNavigationBarItem(
      icon: Icon(Icons.category),
      label: "category",
    ),
    BottomNavigationBarItem(
      icon: Icon(Icons.favorite),
      label: "favorite",
    ),
    BottomNavigationBarItem(
      icon: Icon(Icons.settings),
      label: "settings",
    ),

  ];

  void ChangbottomHomeSop(int index) {
    curt = index;
    emit(BottomnavgitorChangHomestate());
  }

  Map<int, bool>favorteas = {};
  prodModels? mom;

  void getProductes() {
    emit(Loatinghomepro());
    Dioshop.GetData(
      url: homel,
      token: tokenl,
    ).then((value) {
      mom = prodModels.formJson(value.data);
      print(mom!.data.banners[0].image);
      emit(Scuusersthomepro());
      mom!.data.products.forEach((element) {
        favorteas.addAll({
          element.id: element.in_favorites!,
        });
      });
      print(favorteas.toString());
    }).catchError((onError) {
      print(onError.toString());
      emit(Errorrhomepro());
    });
  }

  Autogenerated? cator;

  void getCator() {
    emit(LoatinggetCator());
    Dioshop.GetData(
      url: categoriesl,
      token: tokenl,
    ).then((value) {
      cator = Autogenerated.formJson(value.data);
      print(cator!.data.Data2[0].name);
      emit(ScuusersgetCator());
    }).catchError((onError) {
      print(onError.toString());
      emit(ErrorrgetCator());
    });
  }

  ModelFavortes? favorts;

  void ChangeFavortesPost({required int productse}) {
    favorteas[productse] = !favorteas[productse]!;
    emit(LoatinggetFaovrtes());
    Dioshop.postData(
      url: favortsl,
      Data: {
        "product_id": productse,
      },
      tokens: tokenl,
    ).then((value) {
      favorts = ModelFavortes.formJson(value.data);
      print(favorts!.message);
      if (!favorts!.status!) {
        favorteas[productse] = !favorteas[productse]!;
      } else {
        getfavoritesModles();
      }
      emit(ScuusersgetFaovrtes(favorts!));
    }).catchError((onError) {
      if (!favorts!.status!) {
        favorteas[productse] = !favorteas[productse]!;
      }

      print(onError.toString());
      emit(ErrorrgetFaovrtes());
    });
  }

  favoritesModlesSCreeen? f;

  void getfavoritesModles() {
    emit(LoatinggetgetfavoritesModlesextends());
    Dioshop.GetData(
      url: favortsl,
      token: tokenl,
    ).then((value) {
      f = favoritesModlesSCreeen.fromJson(value.data);
      print(f!.dataaaaa.data22222[0].id);
      emit(ScuusersgetgetfavoritesModles());
      print(favorteas.toString());
    }).catchError((onError) {
      print(onError.toString());
      emit(ErrorrgetgetfavoritesModles());
    });
  }

  modelLogin? stting;

  void getStting() {
    emit(LoatinggetgetgetStting());
    Dioshop.GetData(
      url: profilel,
      token: tokenl,
    ).then((value) {
      stting = modelLogin.formJson(value.data);
      print(stting!.data!.name);
      emit(ScuusersgetgetSttingextends());
    }).catchError((onError) {
      print(onError.toString());
      emit(ErrorrgetgetStting());
    });
  }

  modelLogin?updatd;

  void putdat({
    required String name,
    required String phone,
    required String email,

  }) {
    emit(Loatinggetputdatextends());
    Dioshop.putdata(
      url: updateprofilel,
      Data: {
        "name": name,
        "phone": phone,
        "email": email,

      },
      tokens: tokenl,
    ).then((value) {
      stting = modelLogin.formJson(value.data);
      print(stting!.data!.name);
      emit(Scuusersputdat());
    }).catchError((onError) {
      print(onError.toString());
      emit(Errorrputdat());
    });
  }

  ScaerchSCreeen? screach;

  void ScaerchSCreeenPost({required String productse}) {
    emit(LoatinggeScaerchSCreeenPost());
    Dioshop.postData(
      url: products_search,
      Data: {
        "text": productse,
      },
      tokens: tokenl,
    ).then((value) {
      screach = ScaerchSCreeen.fromJson(value.data);
      print(screach!.message);

      emit(ScuuserScaerchSCreeenPost());
    }).catchError((onError) {
      print(onError.toString());
      emit(ErrorrScaerchSCreeenPost());
    });
  }
}
